{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Daily/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/arrow-left.svg","path":"images/arrow-left.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/arrow-right.svg","path":"images/arrow-right.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/github.svg","path":"images/github.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/mail.svg","path":"images/mail.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/menu.svg","path":"images/menu.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/twitter.svg","path":"images/twitter.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/weibo.svg","path":"images/weibo.svg","modified":0,"renderable":1},{"_id":"themes/Daily/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/Daily/source/images/icon.png","path":"images/icon.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Daily/README.md","hash":"d4135fb0cdc8125a8f62f200f3b38822af5dcc3f","modified":1477010259783},{"_id":"themes/Daily/_config.yml","hash":"a059450b1d90ab87a7f8018b6f3e2ac9cfe14671","modified":1477097447548},{"_id":"source/_posts/es6-to-es5-class.md","hash":"3406302a9ffd716cededa49e86a0e06b6f3b29d4","modified":1478844873127},{"_id":"themes/Daily/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1477010259767},{"_id":"themes/Daily/.git/config","hash":"4f28d352eb0d4c5fc64ac9c954bbc8111e5d8c90","modified":1477010259767},{"_id":"themes/Daily/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1477010253331},{"_id":"themes/Daily/.git/index","hash":"b8d2ec65ade91484263b86a9b159f832653dd024","modified":1478845552923},{"_id":"themes/Daily/.git/packed-refs","hash":"4151cdd078878464ef174636c142073b2a21c4ca","modified":1477010259763},{"_id":"themes/Daily/languages/default.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1477010259783},{"_id":"themes/Daily/languages/en.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1477010259783},{"_id":"themes/Daily/languages/zh-CN.yml","hash":"3e28e97eaf0e172ddee96b2d6f8ba604d90ff24d","modified":1477010259787},{"_id":"themes/Daily/languages/zh-TW.yml","hash":"c727b3550a12ad6f99b13e1b320466f8238f4b54","modified":1477010259787},{"_id":"themes/Daily/layout/archive.ejs","hash":"5afa6387ae87e15a4562822850806c51f471cbe8","modified":1477010259787},{"_id":"themes/Daily/layout/index.ejs","hash":"3317310e01719dd58878fb4b7bd1b41d495800af","modified":1477010259787},{"_id":"themes/Daily/layout/layout.ejs","hash":"c673e9ca69477f985a421682722fc91c5c72c986","modified":1477010259787},{"_id":"themes/Daily/layout/post.ejs","hash":"6b6379ed2bc76a0c2bfe5deda6a812faf1fa0794","modified":1477010259787},{"_id":"themes/Daily/layout/tag.ejs","hash":"f13f991cdd2d462cfaff2ead0a110504e10d1d2f","modified":1477010259787},{"_id":"themes/Daily/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1477010253331},{"_id":"themes/Daily/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1477010253335},{"_id":"themes/Daily/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1477010253331},{"_id":"themes/Daily/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1477010253331},{"_id":"themes/Daily/.git/logs/HEAD","hash":"7d5e1cb26a943b21f02362c3ff38d85201f5858d","modified":1477010259767},{"_id":"themes/Daily/layout/_partial/after-footer.ejs","hash":"f5273c7c4242737bef1a8c9791ab5f1a48677ab7","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/article-archive.ejs","hash":"32e6d38ac9074922f958126da4eb5cde0ae98da4","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/article-index.ejs","hash":"46ee6d4d468cc4099aaf0e2a36474a7d42d76745","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/comment.ejs","hash":"a501cf7c149f77b1077ab4bd0cee3c5fc08cc830","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/footer.ejs","hash":"f78d8098f0608a400e1710f50e2611d224242076","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/head.ejs","hash":"9338cdc926aae79a50733e014e82471202b8fa07","modified":1477010259787},{"_id":"themes/Daily/layout/_partial/nav.ejs","hash":"372d4dd50aa22337024359117d8636834b258295","modified":1477051157124},{"_id":"themes/Daily/layout/_partial/pagination.ejs","hash":"98af75b95859dc6aae946497f27d7e51f753e5f6","modified":1477010259787},{"_id":"themes/Daily/source/css/_archive.scss","hash":"698f914f037079d1a25b9d86923eac4775b2ec7a","modified":1477036187707},{"_id":"themes/Daily/source/css/_daily.scss","hash":"21d25a59b60d299ff68ab16179b20341d1e931e2","modified":1477096883396},{"_id":"themes/Daily/source/css/_highlight.scss","hash":"e991c7ebb595557d35c45e3fa4c557882942905c","modified":1477010259787},{"_id":"themes/Daily/source/css/_mobile.scss","hash":"2b7297a4539e6ae803fe459ef411aa4149b24fcf","modified":1477010259787},{"_id":"themes/Daily/source/css/_nav.scss","hash":"87ea81cfd79507792299271e8bf422a9dfe2561f","modified":1477052544684},{"_id":"themes/Daily/source/css/_normalize.scss","hash":"9b986090106a3fc3dc5da29d5198b48332555298","modified":1477036097039},{"_id":"themes/Daily/source/css/_post.scss","hash":"64d31b9a7a16e9fd1b2604053ff7ff9b2bd8279c","modified":1477010259787},{"_id":"themes/Daily/source/css/_variables.scss","hash":"44e76284cf3f70c6c914586132b2e51307439cd9","modified":1477010259787},{"_id":"themes/Daily/source/css/style.scss","hash":"4027338fa7d98a6382e11296f2441dd88e874f2c","modified":1477010259787},{"_id":"themes/Daily/source/images/arrow-left.svg","hash":"4230dcb796a40d7a0f54c68e1ffb1f325ad962a5","modified":1477010259787},{"_id":"themes/Daily/source/images/arrow-right.svg","hash":"98c04bf1be3ca657f1e9697dc63219ade0a5616c","modified":1477010259787},{"_id":"themes/Daily/source/images/github.svg","hash":"bc2e3f2e54c354acfe64899482f6379d25f04792","modified":1477010259787},{"_id":"themes/Daily/source/images/mail.svg","hash":"18b3549b0447d605ca252fefcaa4d8e11179ce21","modified":1477010259787},{"_id":"themes/Daily/source/images/menu.svg","hash":"a1837ac76bc3e2aaf30450941bfefcb29ba16411","modified":1477010259787},{"_id":"themes/Daily/source/images/twitter.svg","hash":"2bef6c843de0113721c6c5d1676385897a22a446","modified":1477010259787},{"_id":"themes/Daily/source/images/weibo.svg","hash":"ffd43d8ae9f9ec4f5ae8b97cafa9023ac2a4e59b","modified":1477010259787},{"_id":"themes/Daily/source/js/app.js","hash":"d1f4b145de977a38252962be6783ebb1aae1526f","modified":1477010259787},{"_id":"themes/Daily/.git/objects/pack/pack-2ca69666eacb4525ba5303f21a84c09591b20934.idx","hash":"efc2819612386ec89e066d2a431e1ca17257cb44","modified":1477010259655},{"_id":"themes/Daily/.git/refs/heads/master","hash":"0f1ade9b88dc712e547adcf460205291e08f6a7b","modified":1477010259767},{"_id":"themes/Daily/.git/logs/refs/heads/master","hash":"7d5e1cb26a943b21f02362c3ff38d85201f5858d","modified":1477010259767},{"_id":"themes/Daily/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1477010259763},{"_id":"themes/Daily/.git/objects/pack/pack-2ca69666eacb4525ba5303f21a84c09591b20934.pack","hash":"2b5436dd43db97d3ed4c447706e69cd15d6802f9","modified":1477010259655},{"_id":"themes/Daily/.git/logs/refs/remotes/origin/HEAD","hash":"7d5e1cb26a943b21f02362c3ff38d85201f5858d","modified":1477010259767},{"_id":"themes/Daily/source/images/icon.png","hash":"934486652f0368706edf6e3fc0becca8183159f3","modified":1477052279416},{"_id":"public/index.html","hash":"c1bc594585ddc1471a138aa8863a7f75b8373f3f","modified":1478844940714},{"_id":"public/archives/index.html","hash":"37bbada86e8e12fe71f629a65bdd59967a54222e","modified":1478844940713},{"_id":"public/archives/2016/index.html","hash":"bc70ec319ee4916afee6bdd851441479a54e0602","modified":1478844940714},{"_id":"public/archives/2016/11/index.html","hash":"14472581064230807552f207a62bd2520bf7f498","modified":1478844940714},{"_id":"public/2016/11/11/es6-to-es5-class/index.html","hash":"3ca40d9fc574d4b1540007382c223f627bb297d7","modified":1478844940713},{"_id":"public/tags/es6-class-babel/index.html","hash":"5efea0f414b7bb1fd2e89a850bc1cd279c50092d","modified":1478844940714},{"_id":"public/images/arrow-left.svg","hash":"4230dcb796a40d7a0f54c68e1ffb1f325ad962a5","modified":1478844824988},{"_id":"public/images/arrow-right.svg","hash":"98c04bf1be3ca657f1e9697dc63219ade0a5616c","modified":1478844824988},{"_id":"public/images/github.svg","hash":"bc2e3f2e54c354acfe64899482f6379d25f04792","modified":1478844824988},{"_id":"public/images/mail.svg","hash":"18b3549b0447d605ca252fefcaa4d8e11179ce21","modified":1478844824988},{"_id":"public/images/menu.svg","hash":"a1837ac76bc3e2aaf30450941bfefcb29ba16411","modified":1478844824988},{"_id":"public/images/twitter.svg","hash":"2bef6c843de0113721c6c5d1676385897a22a446","modified":1478844824988},{"_id":"public/images/weibo.svg","hash":"ffd43d8ae9f9ec4f5ae8b97cafa9023ac2a4e59b","modified":1478844824988},{"_id":"public/js/app.js","hash":"d1f4b145de977a38252962be6783ebb1aae1526f","modified":1478844825017},{"_id":"public/css/style.css","hash":"f1060bd386cfdefd474943697bb2d62e8bb00782","modified":1478844825017},{"_id":"public/images/icon.png","hash":"934486652f0368706edf6e3fc0becca8183159f3","modified":1478844825028}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"es6定义对象class编译到es5代码解读","date":"2016-11-11T06:11:34.000Z","_content":"## es6定义对象class编译到es5代码解读\n\n###### 1.es6代码：\n\n```\nclass one {\n  say() {\n    console.log(\"hello world\");\n  }\n}\n```\n\n\n\n上面使用es6的class定义一个简单的类，使用`babel`编译到es5的代码是什么样子？\n\n###### 2. es5代码如下：\n\n```\n'use strict';\n//1.定义拷贝函数\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n//2. 检查构造函数\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n//3. 定义对象函数\nvar one = function () {\n  function one() {\n    _classCallCheck(this, one);\n  }\n\n  _createClass(one, [{\n    key: 'say',\n    value: function say() {\n      console.log('hello world');\n    }\n  }]);\n\n  return one;\n}();\n```\n\n###### 3. 解读es5代码\n\n编译后的代码分共三个函数。\n\n1）\n\n定义_createClass = 一个立即执行匿名函数。匿名函数内部定义`definProperties`函数将属性循环拷贝到目标对象上； 然后返回一个函数有三个参数`(Constructor, protoProps, staticProps)`, 内部调用`definProperties` 分别将原型属性拷贝到构造函数的原型，静态属性拷贝到构造函数本身，并返回此构造函数。\n\n2）\n\n定义类型检查报错函数`_classCallCheck`,如果instance不是构造函数的实例，抛出错误：不能将类当做函数调用？\n\n3）\n\n定义我们写的es6代码中的类`one`,也是一个立即函数，定义一个空函数，调用`_createClass`将es6中class定义的函数以键值对的形式组合成数组对象传递进去。\n\n###### 4. 总结\n\nes6的class转换为es5代码实际就是创建一个与class类名相同的构造函数，并将class中的属性方法绑定到同名构造函数的原型上的过程。要调用one的属性方法还需要`new`实例化。","source":"_posts/es6-to-es5-class.md","raw":"---\ntitle: es6定义对象class编译到es5代码解读\ndate: 2016-11-11 14:11:34\ntags: es6 class babel\n---\n## es6定义对象class编译到es5代码解读\n\n###### 1.es6代码：\n\n```\nclass one {\n  say() {\n    console.log(\"hello world\");\n  }\n}\n```\n\n\n\n上面使用es6的class定义一个简单的类，使用`babel`编译到es5的代码是什么样子？\n\n###### 2. es5代码如下：\n\n```\n'use strict';\n//1.定义拷贝函数\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n//2. 检查构造函数\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n//3. 定义对象函数\nvar one = function () {\n  function one() {\n    _classCallCheck(this, one);\n  }\n\n  _createClass(one, [{\n    key: 'say',\n    value: function say() {\n      console.log('hello world');\n    }\n  }]);\n\n  return one;\n}();\n```\n\n###### 3. 解读es5代码\n\n编译后的代码分共三个函数。\n\n1）\n\n定义_createClass = 一个立即执行匿名函数。匿名函数内部定义`definProperties`函数将属性循环拷贝到目标对象上； 然后返回一个函数有三个参数`(Constructor, protoProps, staticProps)`, 内部调用`definProperties` 分别将原型属性拷贝到构造函数的原型，静态属性拷贝到构造函数本身，并返回此构造函数。\n\n2）\n\n定义类型检查报错函数`_classCallCheck`,如果instance不是构造函数的实例，抛出错误：不能将类当做函数调用？\n\n3）\n\n定义我们写的es6代码中的类`one`,也是一个立即函数，定义一个空函数，调用`_createClass`将es6中class定义的函数以键值对的形式组合成数组对象传递进去。\n\n###### 4. 总结\n\nes6的class转换为es5代码实际就是创建一个与class类名相同的构造函数，并将class中的属性方法绑定到同名构造函数的原型上的过程。要调用one的属性方法还需要`new`实例化。","slug":"es6-to-es5-class","published":1,"updated":"2016-11-11T06:14:33.127Z","_id":"civde0xo90000tgo3alo9qphd","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"es6定义对象class编译到es5代码解读\"><a href=\"#es6定义对象class编译到es5代码解读\" class=\"headerlink\" title=\"es6定义对象class编译到es5代码解读\"></a>es6定义对象class编译到es5代码解读</h2><h6 id=\"1-es6代码：\"><a href=\"#1-es6代码：\" class=\"headerlink\" title=\"1.es6代码：\"></a>1.es6代码：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class one &#123;</div><div class=\"line\">  say() &#123;</div><div class=\"line\">    console.log(&quot;hello world&quot;);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面使用es6的class定义一个简单的类，使用<code>babel</code>编译到es5的代码是什么样子？</p>\n<h6 id=\"2-es5代码如下：\"><a href=\"#2-es5代码如下：\" class=\"headerlink\" title=\"2. es5代码如下：\"></a>2. es5代码如下：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;use strict&apos;;</div><div class=\"line\">//1.定义拷贝函数</div><div class=\"line\">var _createClass = function () &#123;</div><div class=\"line\">  function defineProperties(target, props) &#123;</div><div class=\"line\">    for (var i = 0; i &lt; props.length; i++) &#123;</div><div class=\"line\">      var descriptor = props[i];</div><div class=\"line\">      descriptor.enumerable = descriptor.enumerable || false;</div><div class=\"line\">      descriptor.configurable = true;</div><div class=\"line\">      if (&quot;value&quot; in descriptor) descriptor.writable = true;</div><div class=\"line\">      Object.defineProperty(target, descriptor.key, descriptor);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  return function (Constructor, protoProps, staticProps) &#123;</div><div class=\"line\">    if (protoProps) defineProperties(Constructor.prototype, protoProps);</div><div class=\"line\">    if (staticProps) defineProperties(Constructor, staticProps);</div><div class=\"line\">    return Constructor;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;();</div><div class=\"line\"></div><div class=\"line\">//2. 检查构造函数</div><div class=\"line\">function _classCallCheck(instance, Constructor) &#123;</div><div class=\"line\">  if (!(instance instanceof Constructor)) &#123;</div><div class=\"line\">    throw new TypeError(&quot;Cannot call a class as a function&quot;);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//3. 定义对象函数</div><div class=\"line\">var one = function () &#123;</div><div class=\"line\">  function one() &#123;</div><div class=\"line\">    _classCallCheck(this, one);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  _createClass(one, [&#123;</div><div class=\"line\">    key: &apos;say&apos;,</div><div class=\"line\">    value: function say() &#123;</div><div class=\"line\">      console.log(&apos;hello world&apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;]);</div><div class=\"line\"></div><div class=\"line\">  return one;</div><div class=\"line\">&#125;();</div></pre></td></tr></table></figure>\n<h6 id=\"3-解读es5代码\"><a href=\"#3-解读es5代码\" class=\"headerlink\" title=\"3. 解读es5代码\"></a>3. 解读es5代码</h6><p>编译后的代码分共三个函数。</p>\n<p>1）</p>\n<p>定义_createClass = 一个立即执行匿名函数。匿名函数内部定义<code>definProperties</code>函数将属性循环拷贝到目标对象上； 然后返回一个函数有三个参数<code>(Constructor, protoProps, staticProps)</code>, 内部调用<code>definProperties</code> 分别将原型属性拷贝到构造函数的原型，静态属性拷贝到构造函数本身，并返回此构造函数。</p>\n<p>2）</p>\n<p>定义类型检查报错函数<code>_classCallCheck</code>,如果instance不是构造函数的实例，抛出错误：不能将类当做函数调用？</p>\n<p>3）</p>\n<p>定义我们写的es6代码中的类<code>one</code>,也是一个立即函数，定义一个空函数，调用<code>_createClass</code>将es6中class定义的函数以键值对的形式组合成数组对象传递进去。</p>\n<h6 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4. 总结\"></a>4. 总结</h6><p>es6的class转换为es5代码实际就是创建一个与class类名相同的构造函数，并将class中的属性方法绑定到同名构造函数的原型上的过程。要调用one的属性方法还需要<code>new</code>实例化。</p>\n","excerpt":"","more":"<h2 id=\"es6定义对象class编译到es5代码解读\"><a href=\"#es6定义对象class编译到es5代码解读\" class=\"headerlink\" title=\"es6定义对象class编译到es5代码解读\"></a>es6定义对象class编译到es5代码解读</h2><h6 id=\"1-es6代码：\"><a href=\"#1-es6代码：\" class=\"headerlink\" title=\"1.es6代码：\"></a>1.es6代码：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class one &#123;</div><div class=\"line\">  say() &#123;</div><div class=\"line\">    console.log(&quot;hello world&quot;);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面使用es6的class定义一个简单的类，使用<code>babel</code>编译到es5的代码是什么样子？</p>\n<h6 id=\"2-es5代码如下：\"><a href=\"#2-es5代码如下：\" class=\"headerlink\" title=\"2. es5代码如下：\"></a>2. es5代码如下：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;use strict&apos;;</div><div class=\"line\">//1.定义拷贝函数</div><div class=\"line\">var _createClass = function () &#123;</div><div class=\"line\">  function defineProperties(target, props) &#123;</div><div class=\"line\">    for (var i = 0; i &lt; props.length; i++) &#123;</div><div class=\"line\">      var descriptor = props[i];</div><div class=\"line\">      descriptor.enumerable = descriptor.enumerable || false;</div><div class=\"line\">      descriptor.configurable = true;</div><div class=\"line\">      if (&quot;value&quot; in descriptor) descriptor.writable = true;</div><div class=\"line\">      Object.defineProperty(target, descriptor.key, descriptor);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  return function (Constructor, protoProps, staticProps) &#123;</div><div class=\"line\">    if (protoProps) defineProperties(Constructor.prototype, protoProps);</div><div class=\"line\">    if (staticProps) defineProperties(Constructor, staticProps);</div><div class=\"line\">    return Constructor;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;();</div><div class=\"line\"></div><div class=\"line\">//2. 检查构造函数</div><div class=\"line\">function _classCallCheck(instance, Constructor) &#123;</div><div class=\"line\">  if (!(instance instanceof Constructor)) &#123;</div><div class=\"line\">    throw new TypeError(&quot;Cannot call a class as a function&quot;);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//3. 定义对象函数</div><div class=\"line\">var one = function () &#123;</div><div class=\"line\">  function one() &#123;</div><div class=\"line\">    _classCallCheck(this, one);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  _createClass(one, [&#123;</div><div class=\"line\">    key: &apos;say&apos;,</div><div class=\"line\">    value: function say() &#123;</div><div class=\"line\">      console.log(&apos;hello world&apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;]);</div><div class=\"line\"></div><div class=\"line\">  return one;</div><div class=\"line\">&#125;();</div></pre></td></tr></table></figure>\n<h6 id=\"3-解读es5代码\"><a href=\"#3-解读es5代码\" class=\"headerlink\" title=\"3. 解读es5代码\"></a>3. 解读es5代码</h6><p>编译后的代码分共三个函数。</p>\n<p>1）</p>\n<p>定义_createClass = 一个立即执行匿名函数。匿名函数内部定义<code>definProperties</code>函数将属性循环拷贝到目标对象上； 然后返回一个函数有三个参数<code>(Constructor, protoProps, staticProps)</code>, 内部调用<code>definProperties</code> 分别将原型属性拷贝到构造函数的原型，静态属性拷贝到构造函数本身，并返回此构造函数。</p>\n<p>2）</p>\n<p>定义类型检查报错函数<code>_classCallCheck</code>,如果instance不是构造函数的实例，抛出错误：不能将类当做函数调用？</p>\n<p>3）</p>\n<p>定义我们写的es6代码中的类<code>one</code>,也是一个立即函数，定义一个空函数，调用<code>_createClass</code>将es6中class定义的函数以键值对的形式组合成数组对象传递进去。</p>\n<h6 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4. 总结\"></a>4. 总结</h6><p>es6的class转换为es5代码实际就是创建一个与class类名相同的构造函数，并将class中的属性方法绑定到同名构造函数的原型上的过程。要调用one的属性方法还需要<code>new</code>实例化。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"civde0xo90000tgo3alo9qphd","tag_id":"civde0xoj0001tgo37w8xg1vo","_id":"civde0xon0002tgo3hyvb5z2d"}],"Tag":[{"name":"es6 class babel","_id":"civde0xoj0001tgo37w8xg1vo"}]}}